/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -p qibusconfigproxy -c IBusConfigProxy -v org.freedesktop.IBus.Config.xml org.freedesktop.IBus.Config
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef QIBUSCONFIGPROXY_H_1268725630
#define QIBUSCONFIGPROXY_H_1268725630

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.IBus.Config
 */
class IBusConfigProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.IBus.Config"; }

public:
    IBusConfigProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~IBusConfigProxy();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> Destroy()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Destroy"), argumentList);
    }

    inline QDBusPendingReply<QDBusVariant> GetValue(const QString &section, const QString &name)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(section) << qVariantFromValue(name);
        return asyncCallWithArgumentList(QLatin1String("GetValue"), argumentList);
    }

    inline QDBusPendingReply<> SetValue(const QString &section, const QString &name, const QDBusVariant &value)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(section) << qVariantFromValue(name) << qVariantFromValue(value);
        return asyncCallWithArgumentList(QLatin1String("SetValue"), argumentList);
    }

    inline QDBusPendingReply<> Unset(const QString &section, const QString &name)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(section) << qVariantFromValue(name);
        return asyncCallWithArgumentList(QLatin1String("Unset"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void ValueChanged(const QString &section, const QString &name, const QDBusVariant &value);
};

namespace org {
  namespace freedesktop {
    namespace IBus {
      typedef ::IBusConfigProxy Config;
    }
  }
}
#endif
